/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screen3_screen/Screen3ViewBase.hpp>
#include "BitmapDatabase.hpp"
#include <texts/TextKeysAndLanguages.hpp>
#include <touchgfx/Color.hpp>

Screen3ViewBase::Screen3ViewBase() :
    buttonCallback(this, &Screen3ViewBase::buttonCallbackHandler),
    sliderValueConfirmedCallback(this, &Screen3ViewBase::sliderValueConfirmedCallbackHandler)
{
    CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);

    backgroundImage.setBitmap(Bitmap(BITMAP_BLUE_TEXTURES_GREY_WASH_WALL_ID));
    backgroundImage.setPosition(0, 0, 480, 272);
    backgroundImage.setOffset(0, 0);

    coverImage.setBitmap(Bitmap(BITMAP_MULTIMEDIA_MUSIC_MUSIC_NOTE_NOTE_ICON_ID));
    coverImage.setPosition(54, 46, 128, 128);
    coverImage.setScalingAlgorithm(ScalableImage::NEAREST_NEIGHBOR);

    songName.setPosition(225, 30, 242, 32);
    songName.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    songName.setLinespacing(0);
    Unicode::snprintf(songNameBuffer, SONGNAME_SIZE, "%s", TypedText(T_SINGLEUSEID2).getText());
    songName.setWildcard(songNameBuffer);
    songName.setTypedText(TypedText(T_SINGLEUSEID1));

    slider.setXY(61, 211);
    slider.setBitmaps(Bitmap(BITMAP_BLUE_SLIDER_HORIZONTAL_MEDIUM_SLIDER_ROUND_BACK_ID), Bitmap(BITMAP_BLUE_SLIDER_HORIZONTAL_MEDIUM_SLIDER_ROUND_FILL_ID), Bitmap(BITMAP_BLUE_SLIDER_HORIZONTAL_MEDIUM_INDICATORS_SLIDER_ROUND_NOB_ID));
    slider.setupHorizontalSlider(2, 19, 2, 0, 310);
    slider.setValueRange(0, 100);
    slider.setValue(0);
    slider.setStopValueCallback(sliderValueConfirmedCallback);

    songProgress.setXY(26, 18);
    songProgress.setProgressIndicatorPosition(0, 0, 184, 184);
    songProgress.setRange(0, 100);
    songProgress.setCenter(92, 92);
    songProgress.setRadius(82);
    songProgress.setLineWidth(16);
    songProgress.setStartEndAngle(0, 360);
    songProgress.setCapPrecision(180);
    songProgress.setBackground(Bitmap(BITMAP_BLUE_PROGRESSINDICATORS_BG_LARGE_CIRCLE_INDICATOR_BG_LINE_FULL_ID));
    songProgressPainter.setBitmap(Bitmap(BITMAP_BLUE_PROGRESSINDICATORS_FILL_LARGE_CIRCLE_INDICATOR_FILL_LINE_FULL_ID));
    songProgress.setPainter(songProgressPainter);
    songProgress.setValue(60);

    buttonPrev.setXY(225, 132);
    buttonPrev.setBitmaps(Bitmap(BITMAP_BLUE_BUTTONS_SQUARE_ICON_BUTTON_ID), Bitmap(BITMAP_BLUE_BUTTONS_SQUARE_ICON_BUTTON_PRESSED_ID), Bitmap(BITMAP_BLUE_ICONS_BACK_ARROW_32_ID), Bitmap(BITMAP_BLUE_ICONS_BACK_ARROW_32_ID));
    buttonPrev.setIconXY(22, 15);
    buttonPrev.setAction(buttonCallback);

    buttonPlay.setXY(300, 132);
    buttonPlay.setBitmaps(Bitmap(BITMAP_BLUE_BUTTONS_SQUARE_ICON_BUTTON_ID), Bitmap(BITMAP_BLUE_BUTTONS_SQUARE_ICON_BUTTON_PRESSED_ID), Bitmap(BITMAP_BLUE_ICONS_GO_NEXT_32_ID), Bitmap(BITMAP_BLUE_ICONS_GO_NEXT_32_ID));
    buttonPlay.setIconXY(15, 16);
    buttonPlay.setAction(buttonCallback);

    buttonNext.setXY(375, 132);
    buttonNext.setBitmaps(Bitmap(BITMAP_BLUE_BUTTONS_SQUARE_ICON_BUTTON_ID), Bitmap(BITMAP_BLUE_BUTTONS_SQUARE_ICON_BUTTON_PRESSED_ID), Bitmap(BITMAP_BLUE_ICONS_NEXT_ARROW_32_ID), Bitmap(BITMAP_BLUE_ICONS_NEXT_ARROW_32_ID));
    buttonNext.setIconXY(22, 15);
    buttonNext.setAction(buttonCallback);

    add(backgroundImage);
    add(coverImage);
    add(songName);
    add(slider);
    add(songProgress);
    add(buttonPrev);
    add(buttonPlay);
    add(buttonNext);
}

void Screen3ViewBase::setupScreen()
{

}

void Screen3ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonPrev)
    {
        //songPrevious
        //When buttonPrev clicked call virtual function
        //Call playPrevSong
        playPrevSong();
    }
    else if (&src == &buttonPlay)
    {
        //songPlay
        //When buttonPlay clicked call virtual function
        //Call playPause
        playPause();
    }
    else if (&src == &buttonNext)
    {
        //songNext
        //When buttonNext clicked call virtual function
        //Call playNextSong
        playNextSong();
    }
}

void Screen3ViewBase::sliderValueConfirmedCallbackHandler(const touchgfx::Slider& src, int value)
{
    if (&src == &slider)
    {
        //progressSliderChanged
        //When slider value confirmed call virtual function
        //Call moveSongPosition
        moveSongPosition(value);
    }
}
